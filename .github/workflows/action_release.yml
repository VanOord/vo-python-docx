name: Release
# https://docs.github.com/en/actions/quickstart
# https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  release:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#release
    types: [released] # only run it on released. Otherwise it is triggered 3 times.
  # Push is only for testing purpose. Make sure to switch off the Deploy section.
  # Also you need to change the branch that is checked out.
  # push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Note fetch-depth and checkout main are required for sphinx-multiversion docs
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Checkout main
      uses: actions/checkout@v2
      with:
        ref: 'main'
    
    # Setup Python
    # https://github.com/marketplace/actions/setup-python
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Print python version
      run: python --version
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Print package list
      run: pip list

    # Install the package
    - name: Install package
      env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: pip install .[test,docs] --index-url=https://$GITHUB_TOKEN@pypi.data.vanoord.com
    - name: Print package list
      run: pip list

    # Run the tests
    - name: Run tests
      run: pytest

    # Coverage badge
    - name: Make coverage badge
      run: |
        pip install coverage-badge
        coverage-badge -o ./build/coverage/coverage.svg
    
    # Create the docs
    - name: Create docs
      run: sphinx-multiversion docs build/docs

    # Extract the release version (used for commit message of docs)
    - name: Set release version in env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Show release version
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}

    # Crate a puplic folder for docs deployment
    - name: Make public directory
      run: |
        mkdir ./public
        mkdir ./public/docs
        mkdir ./public/coverage
        cp -a ./build/docs/* ./public/docs/
        cp -a ./build/coverage/* ./public/coverage/

    # Deploy the docs
    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        destination_dir: ./
        commit_message: "Update docs for release ${{ env.RELEASE_VERSION }} - "

    # Save the whole root folder as artifact
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Release artifacts
        path: ./
        retention-days: 1
