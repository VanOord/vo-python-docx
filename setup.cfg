[metadata]
name = python-docx
author = "Steve Canny"
author_email = "python-docx@googlegroups.com"
license = text_of("LICENSE")
description = "Create and update Microsoft Word .docx files."
description-file = README.md
url = https://github.com/VanOord/python-docx
classifiers =
    Development Status :: 4 - Beta
    Operating System :: OS Independen
    Programming Language :: Python :: 3
    Topic :: docx office openxml word

[options]
packages = find:
zip_safe = False  # https://mypy.readthedocs.io/en/latest/installed_packages.html
include_package_data = True
python_requires = >=3.8
install_requires =
    behave>=1.2.3
    flake8>=2.0
    lxml>=3.1.0
    mock>=1.0.1
    pyparsing>=2.0.1
    pytest>=2.5

[options.extras_require]
lint = 
    black[jupyter]
    ; flake8
    isort
    ; mypy
    ; pydocstyle
test = 
    pytest
    pytest-cov
    ; behave
    ; mock
    ; pyparsing
docs =
    IPython
    myst-parser
    sphinx
    sphinx-multiversion
dev = 
    %(lint)s
    %(test)s
    %(docs)s

[tool:pytest]
addopts =
    # Define where to run (defaults to root level)
    --cov docx
    # HTML test report for docs
    --cov-report html:build/coverage
    # Terminal, print missing lines
    --cov-report term-missing
    # Detailed output
    --verbose
python_files = test_*.py
testpaths = tests

[tool.black]
line-length = 88

[flake8]
max-line-length = 88
ignore =
    E203 # whitespace before ':' - doesn't work well with black
    E402 # module level import not at top of file
    E501 # line too long - let black worry about that
    E731 # do not assign a lambda expression, use a def
    W503 # line break before binary operator

exclude=
    .eggs
    docs
    build

[isort]
profile = black
skip_gitignore = true
float_to_top = true
default_section = THIRDPARTY
known_first_party = python_docx

[pydocstyle]
# Initially the convention 'Numpy' was adhered to. We only ignore the requirement that
# class inits require a docstring. To do this, the numpy convention requirement is
# replaced with a explicit definition which corresponds to the numpy convention with the
# addition of D107
# See:  http://www.pydocstyle.org/en/stable/error_codes.html#default-conventions
# convention=numpy
ignore = D107,D203,D212,D213,D402,D413,D415,D416,D417
match = .*\.py

[mypy]
exclude = docs|build
files = .
show_error_codes = True
ignore_missing_imports = True
